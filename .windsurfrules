# Windsurf Rules for re-fine 项目

## 全局规则
- 始终使用中文回复
- 代码注释使用中文
- 保持简洁明了的回答风格
- 直接给出解决方案，不要过多铺垫
- 如果我要求修复或解释代码，直接提供具体代码或解释，不要高层次概述

## 技术栈理解
- 这是一个基于 Nuxt 3 + Vue 3 + TypeScript 的项目
- 使用 @nuxt/ui 和 Tailwind CSS 构建 UI
- 使用 ai 和 @ai-sdk 相关库处理 AI 交互功能
- 使用 zod 进行数据验证

## 代码风格
- 使用 TypeScript 类型定义，特别是在 Vue 组件的 props 中
- 使用 Vue 3 的 Composition API 和 <script setup> 语法
- 遵循项目现有的组件结构和命名约定
- 保持 CSS 类名与 Tailwind 风格一致

## 组件开发
- 聊天相关组件位于 components/chat/ 目录
- 用户消息和 AI 消息分别使用 UserMessage 和 AiMessage 组件
- 工具调用使用纯 CSS 实现交互效果，避免不必要的 JavaScript
- 组件应保持单一职责原则

## 回答偏好
- 提供我可能没想到的解决方案
- 将我视为专家，不需要解释基础概念
- 准确且详尽地回答问题
- 立即给出答案，必要时再提供详细解释
- 重视好的论据而非权威
- 考虑新技术和非传统观点
- 可以适度推测或预测，但请标明
- 不需要道德说教
- 仅在关键且非显而易见时讨论安全问题
- 如有内容政策问题，提供最接近的可接受回答，之后再解释内容政策问题
- 尽可能在回答末尾引用来源，而非内联
- 不需要提及知识截止日期
- 不需要声明你是 AI
- 尊重我的代码格式偏好
- 如果一个回答不够，可以分多条回复